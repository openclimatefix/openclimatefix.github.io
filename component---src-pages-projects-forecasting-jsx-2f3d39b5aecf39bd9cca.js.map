{"version":3,"sources":["webpack://ocf-website/./src/components/Layout.jsx","webpack://ocf-website/./src/components/LogoCloud/index.jsx","webpack://ocf-website/./src/components/LogoCloud/logocloud.module.css","webpack://ocf-website/./src/components/PostLink.jsx","webpack://ocf-website/./src/components/PostList.jsx","webpack://ocf-website/./src/pages/projects/forecasting.jsx"],"names":["children","siteTitle","useStaticQuery","site","siteMetadata","title","className","LogoCloud","LOGOS","logos","name","image","link","StaticQuery","query","render","data","map","img","allFile","edges","find","node","relativePath","endsWith","key","href","type","src","childImageSharp","fixed","alt","style","filter","post","frontmatter","date","path","authorName","authorImage","coverImageUnsplashId","excerpt","readingTime","fields","Link","to","text","posts","id","allMarkdownRemark","frameBorder","allow","allowFullScreen"],"mappings":"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","file":"component---src-pages-projects-forecasting-jsx-2f3d39b5aecf39bd9cca.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport SEO from './seo';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport './layout.css';\n// import SpecialAnnouncement from './SpecialAnnouncement';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <>\n      <SEO title={siteTitle} />\n      {/* <SpecialAnnouncement /> */}\n      <Header />\n      <main className=\"px-6 container mx-auto md:max-w-2xl lg:max-w-2xl xl:max-w-2xl mb-16\">\n        {children}\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport { logogrid } from './logocloud.module.css';\n\nexport default function LogoCloud({ logos }) {\n  const LOGOS = logos || [\n    {\n      name: 'ESA Business Applications',\n      image: 'esa_space_solutions.png',\n      link: 'https://business.esa.int/',\n    },\n    {\n      name: 'Google.org',\n      image: 'google_org.png',\n      link: 'https://www.google.org/',\n    },\n    {\n      name: 'Open Data Institute',\n      image: 'odi.png',\n      link: 'https://theodi.org/',\n    },\n    {\n      name: 'The Alan Turing Institute',\n      image: 'turing.png',\n      link: 'https://www.turing.ac.uk/',\n    },\n    {\n      name: 'UCL',\n      image: 'UCL.jpg',\n      link: 'https://www.ucl.ac.uk/',\n    },\n    {\n      name: 'Innovate UK',\n      image: 'innovateuk.png',\n      link: 'https://www.gov.uk/government/organisations/innovate-uk',\n    },\n    {\n      name: 'Machine Intelligence Garage',\n      image: 'MI-Garage_Badge_cohort.png',\n      link: 'https://www.migarage.ai/',\n    },\n    {\n      name: 'The Climate Subak',\n      image: 'subak.png',\n      link: 'https://www.subak.org/',\n    },\n    {\n      name: 'HAO',\n      image: 'hao_black.png',\n      link: 'https://haocreative.ca/',\n    },\n    {\n      name: 'Icebreaker One',\n      image: 'icebreakerOneURL.png',\n      link: 'https://icebreakerone.org/',\n    },\n    {\n      name: 'RAAIS Foundation',\n      image: 'raais_foundation.png',\n      link: 'https://www.raais.org/',\n    },\n  ];\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query LogosQuery {\n          allFile(filter: { relativeDirectory: { eq: \"logos\" } }) {\n            edges {\n              node {\n                relativePath\n                childImageSharp {\n                  fluid(maxWidth: 300, maxHeight: 250) {\n                    ...GatsbyImageSharpFluid\n                  }\n                  fixed(width: 300) {\n                    ...GatsbyImageSharpFixed\n                  }\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={(data) => (\n        <div className={logogrid}>\n          {LOGOS.map(({ name, image, link }) => {\n            const img = data.allFile.edges.find(({ node }) =>\n              node.relativePath.endsWith(image)\n            ).node;\n\n            return (\n              <a key={`logo-${name}`} href={link} type=\"button\">\n                <img\n                  src={img.childImageSharp.fixed.src}\n                  title={name}\n                  alt={`Logo for ${name}`}\n                  style={{ filter: 'grayscale(100%)' }}\n                />\n              </a>\n            );\n          })}\n        </div>\n      )}\n    />\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport const logogrid = \"logocloud-module--logogrid--1AFqk\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst PostLink = ({\n  post: {\n    frontmatter: {\n      date,\n      path,\n      title,\n      authorName,\n      authorImage,\n      coverImageUnsplashId,\n    },\n    excerpt,\n    fields: { readingTime },\n  },\n}) => (\n  <li className=\"list-none mb-4\">\n    <Link to={path}>\n      <div className=\"max-w-md w-full sm:max-w-full sm:flex\">\n        <img\n          className=\"h-48 w-full sm:h-auto sm:w-48 flex-none bg-cover rounded-t sm:rounded-t-none sm:rounded-l object-cover\"\n          src={`https://source.unsplash.com/${coverImageUnsplashId}/400x250`}\n        />\n        <div className=\"border-r border-b border-l border-gray-400 sm:border-l-0 sm:border-t sm:border-gray-400 bg-white rounded-b sm:rounded-b-none sm:rounded-r p-4 flex flex-col justify-between leading-normal\">\n          <div className=\"mb-8\">\n            <div className=\"text-gray-900 font-bold text-xl mb-2\">{title}</div>\n            <p className=\"text-gray-700 text-base\">{excerpt}</p>\n          </div>\n          <div className=\"flex items-center\">\n            <img\n              className=\"w-10 h-10 rounded-full mr-4\"\n              src={authorImage}\n              alt={`Avatar of author ${authorName}`}\n            />\n            <div className=\"text-sm\">\n              <p className=\"text-gray-900 leading-none\">{authorName}</p>\n              <p className=\"text-gray-600\">\n                {date} Â· {readingTime.text}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  </li>\n);\n\nPostLink.propTypes = {\n  post: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      authorName: PropTypes.string.isRequired,\n      authorImage: PropTypes.string.isRequired,\n      coverImageUnsplashId: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PostLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PostLink from './PostLink';\n\nconst PostList = ({ posts }) => (\n  <div className=\"mt-6\">\n    <ul>\n      {posts.map(({ node: post }) => (\n        <PostLink key={post.id} post={post} />\n      ))}\n    </ul>\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport SEO from '../../components/seo';\nimport Layout from '../../components/Layout';\nimport PostList from '../../components/PostList';\nimport LogoCloud from '../../components/LogoCloud';\n\nconst NowcastingPage = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title=\"Project: Forecasting\" />\n      <h1>Forecasting</h1>\n      <div className=\"prose\">\n        <figure className=\"mb-4\">\n          <div className=\"video-wrapper\">\n            <iframe\n              title=\"Forecasting Video\"\n              src=\"https://www.youtube.com/embed/IOp-tj-IJpk\"\n              frameBorder=\"0\"\n              allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen\n            />\n          </div>\n          <figcaption className=\"text-xs text-gray-600 text-center mt-1\">\n            Video showing energy production of PV systems in the UK as clouds\n            move overhead.\n          </figcaption>\n        </figure>\n        <h2>Why?</h2>\n        <p>\n          Solar Photovoltaics (PV) is one of the most significant sources of\n          uncertainty in the UKâs power forecasts. To mitigate against the risk\n          of a large cloud sweeping across the country (and hence the grid\n          losing gigawatts of PV generation), the Electricity System Operator\n          (National Grid) keeps lots of natural gas generators operating at less\n          than full capacity, so they have headroom to ramp up quickly (spinning\n          reserve).\n        </p>\n        <p>\n          The physics of the grid dictate that - at every instant - supply must\n          precisely match demand. So, any loss in PV supply must be immediately\n          replaced. These gas turbines are kept idling because they take several\n          hours to start up from cold, but they can be ramped up very quickly\n          from idle. Spinning reserve costs a lot of money and pumps out a lot\n          of CO2.\n        </p>\n        <p>\n          If National Grid had better PV forecasts, even for the next few hours,\n          they could reduce the amount of spinning reserve required, and hence\n          reduce emissions (by about 100,000 tonnes per year for the UK{' '}\n          <a href=\"https://docs.google.com/document/d/1sfBJ48_hxSEH-XFrwmH0leS4rSsrBKgwzfoeoqGRPfg/edit#heading=h.m4udy6vx0t7k\">\n            [Details]\n          </a>\n          ) and reduce costs.\n        </p>\n        <p>\n          Electricity traders and PV farm owners will be able to use better\n          short-term PV forecasts to optimise trading decisions in intra-day\n          markets.\n        </p>\n        <p>\n          Further, this unpredictability of PV power inhibits the investment and\n          onboarding of new PV generation farms, as the local and national\n          system operators are concerned about these unexpected weather events\n          destabilising the grid. By providing greater predictability of PV\n          power output, we can make PV power investments lower risk for all\n          stakeholders.\n        </p>\n\n        <h2>What?</h2>\n        <p>\n          Nowcasting is a bit of an odd term. It means \"forecasting for the next\n          few hours\". In general, nowcasting doesn't use the hugely complex and\n          computationally-expensive numerical weather models that run on\n          supercomputers and constitute the bread-and-butter for most\n          forecasting agencies. Instead, nowcasting usually uses statistical or\n          machine learning techniques to take recent observations and roll them\n          forwards.\n        </p>\n\n        <h2>How?</h2>\n        <p>\n          It turns out that most nowcasting research up until now has been done\n          on rainfall (because predicting floods saves lives and property).\n          Relatively little research has been done on nowcasting sunlight.\n        </p>\n        <p>\n          Our main interest is in trying to build machine learning models to\n          forecast solar PV (which basically boils down to trying to predict the\n          movement and evolution of clouds). We will spend the majority of the\n          next year or two writing code to experiment with new ways to predict\n          sunlight for the next few hours. Inputs to the model may include\n          satellite images of clouds, numerical weather predictions, vertical\n          cloud profiles, and geographical information. We will utilize the\n          teamâs experience in Machine Learning as well as contributors from the\n          open source community to accelerate progress.\n        </p>\n        <p>\n          As quickly as possible, we'd like to get early-stage prototype PV\n          forecasts used displayed in the National Grid control room, to\n          validate our modelâs effectiveness and so we can start measuring the\n          impact on emissions and cost. Beyond that we will release a nowcasting\n          product for general market consumption.\n        </p>\n      </div>\n      <h2 className=\"mt-16\">Project Supporters</h2>\n      <LogoCloud\n        logos={[\n          {\n            name: 'ESA Business Applications',\n            image: 'esa_space_solutions.png',\n            link: 'https://business.esa.int/',\n          },\n          {\n            name: 'Google.org',\n            image: 'google_org.png',\n            link: 'https://www.google.org/',\n          },\n        ]}\n      />\n      <div className=\"prose\">\n        <p>\n          We are a{' '}\n          <a href=\"https://openclimatefix.org/blog/2021-04-13-googleorg-support\">\n            successful applicant to the Google.org Impact Challenge on Climate\n          </a>\n          . The Google.org Impact Challenge on Climate commits â¬10M to fund bold\n          ideas that aim to use technology to accelerate Europeâs progress\n          toward a greener, more resilient future. Selected organisations may\n          receive up to â¬2M in funding and possible customised post-grant\n          support from the Google for Startups Accelerator to help bring their\n          ideas to life.\n        </p>\n        <p>\n          <a href=\"https://business.esa.int/\">ESA Business Applications</a>{' '}\n          awarded us an AI Kick-Start co-funding for six months. Kick-Start\n          activities are compact Feasibility Studies to explore new service\n          concepts that use space tech. We asked potential users of forecasting\n          what they need; and how best to serve those needs.\n        </p>\n        <p></p>\n      </div>\n\n      <h2 className=\"mt-16\">Updates</h2>\n      <PostList posts={edges} />\n    </Layout>\n  );\n};\n\nNowcastingPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              date: PropTypes.string.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }).isRequired\n      ),\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default NowcastingPage;\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { project: { eq: \"nowcasting\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            authorName\n            authorImage\n            coverImageUnsplashId\n          }\n          fields {\n            readingTime {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}