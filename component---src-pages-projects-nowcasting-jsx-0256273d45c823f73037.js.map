{"version":3,"sources":["webpack:///./src/pages/projects/nowcasting.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.jsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Footer/index.js","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Layout.jsx","webpack:///./src/components/PostLink.jsx","webpack:///./src/components/PostList.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_PostList__WEBPACK_IMPORTED_MODULE_3__","NowcastingPage","_ref","edges","data","allMarkdownRemark","a","createElement","title","className","posts","m","module","exports","require","default","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","Header","props","_this","_Component","call","this","toggleMenu","setState","prevState","menuClosed","state","render","_this2","gatsby__WEBPACK_IMPORTED_MODULE_0__","to","width","height","viewBox","xmlns","type","onClick","Component","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Footer","react_default","footerStyles","iconList","href","target","rel","go_index_esm","fa_index_esm","index_esm","Layout","children","siteTitle","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","Fragment","_seo__WEBPACK_IMPORTED_MODULE_2__","_Header__WEBPACK_IMPORTED_MODULE_3__","_Footer__WEBPACK_IMPORTED_MODULE_4__","PostLink","post","frontmatter","date","gatsby_browser_entry","path","PostList","map","_ref2","node","components_PostLink","key","id"],"mappings":"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","file":"component---src-pages-projects-nowcasting-jsx-0256273d45c823f73037.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport SEO from '../../components/seo';\nimport Layout from '../../components/Layout';\nimport PostList from '../../components/PostList';\n\n\nconst NowcastingPage = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  return (\n    <Layout>\n      <SEO title=\"Project: Nowcasting\" />\n      <h1>Nowcasting</h1>\n      <main className=\"markdown\">\n        <h2>Why?</h2>\n        <p>\n          Solar Photovoltaics (PV) is the single biggest source of uncertainty in\n          the National Grid&apos;s forecasts. To mitigate against the risk of a\n          large cloud sweeping across the country (and hence the grid losing\n          gigawatts of PV generation), the National Grid keep lots of natural gas\n          generators idling (\n          <em>spinning reserve</em>\n          ).\n        </p>\n        <p>\n          These gas turbines are kept idling because they take several hours to\n          start up from cold, but they can be ramped up very quickly from idle;\n          and the physics of the grid dictate that - at every instant - supply\n          must precisely match demand. So, any loss in PV supply must be\n          immediately replaced. Spinning reserve costs a lot of money and pumps\n          out a lot of CO2.\n        </p>\n        <p>\n          If the National Grid had better PV forecasts, even for the next few\n          hours, they could reduce the amount of spinning reserve required, and\n          hence reduce emissions (by about 100,000 tonnes per year) and reduce\n          costs.\n        </p>\n        <h2>What?</h2>\n        <p>\n          Nowcasting is a bit of an odd term. It means &quot;forecasting for the\n          next few hours&quot;. In general, nowcasting doesn&apos;t use the hugely\n          complex and expensive numerical weather models that run on super\n          computers and constitute the bread-and-butter for most forecasting\n          agencies. Instead, nowcasting usually uses statistical techniques to take\n          recent observations and\n          <em>roll them forwards</em>\n          .\n        </p>\n        <h2>How?</h2>\n        <p>\n          It turns out that most nowcasting research up until now has been done on\n          rainfall (because predicting floods saves lives). Relatively little\n          research has been done on nowcasting sunlight.\n        </p>\n        <p>\n          Our main interest is in trying to build machine learning models to\n          nowcast solar PV (which basically boils down to trying to predict the\n          movement and evolution of clouds). We&apos;d like to spend the majority\n          of the next year or two writing code to experiment with new ways to\n          predict sunlight for the next few hours. Inputs to the model may include\n          satellite images of clouds, numerical weather predictions, vertical cloud\n          profiles, and geographical information.\n        </p>\n        <p>\n          As quickly as possible, we&apos;d\n          like to get prototype PV nowcasts displayed in the National Grid control\n          room, so we can start measuring the\n          impact on emissions and cost.\n        </p>\n      </main>\n      <p className=\"text-xl mt-6 mb-1\">\n        More Information\n      </p>\n      <PostList posts={edges} />\n    </Layout>\n  );\n};\n\nNowcastingPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape({\n        node: PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          frontmatter: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            date: PropTypes.string.isRequired,\n          }).isRequired,\n        }).isRequired,\n      }).isRequired),\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default NowcastingPage;\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { project: {eq: \"nowcasting\"} } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            path\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: 'Open Climate Fix is a new non-profit research and development lab, totally focused on reducing greenhouse gas emissions as rapidly as possible. Every part of the organisation is designed to maximise climate impact, such as our open and collaborative approach, our rapid prototyping, and our attention on finding scalable & practical solutions.',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import { Link } from 'gatsby';\nimport React, { Component } from 'react';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuClosed: true,\n    };\n  }\n\n  toggleMenu = () => {\n    this.setState((prevState) => ({\n      menuClosed: !prevState.menuClosed,\n    }));\n  };\n\n  render() {\n    const { menuClosed } = this.state;\n\n    return (\n      <header className=\"bg-black\">\n        <nav\n          className=\"mx-auto md:max-w-4xl lg:max-w-4xl xl:max-w-4xl flex items-center justify-between flex-wrap p-6\"\n        >\n          <Link to=\"/\">\n            <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n              <svg\n                className=\"fill-current h-8 w-14 mr-4\"\n                width=\"60\"\n                height=\"21\"\n                viewBox=\"0 0 60 21\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M10,20.58a1.08,1.08,0,0,1-.78-.33L.32,11.39a1.12,1.12,0,0,1,0-1.57L9.4.75A1.1,1.1,0,0,1,11,.75a1.09,1.09,0,0,1,0,1.56l-8.29,8.3,8.08,8.08A1.11,1.11,0,0,1,10,20.58Z\" />\n                <path d=\"M39.27,20.58a1.1,1.1,0,0,1-.78-.33l-8.86-8.86a1.12,1.12,0,0,1,0-1.57L38.7.75a1.12,1.12,0,0,1,1.57,0,1.1,1.1,0,0,1,0,1.56L32,10.61l8.09,8.08a1.11,1.11,0,0,1-.79,1.89Z\" />\n                <path d=\"M53.67,12.46a1.11,1.11,0,0,1-.79-1.89l5.23-5.23a1.11,1.11,0,0,1,1.57,1.57l-5.23,5.22A1.1,1.1,0,0,1,53.67,12.46Z\" />\n                <path d=\"M46.79,10.61l8.29-8.3A1.1,1.1,0,0,0,53.52.75L44.44,9.82a1.12,1.12,0,0,0,0,1.57l8.87,8.86a1.08,1.08,0,0,0,.78.33,1.11,1.11,0,0,0,.78-1.89Z\" />\n                <path d=\"M15.79,20.58A1.11,1.11,0,0,1,15,18.69l8.09-8.08-8.3-8.3a1.1,1.1,0,0,1,0-1.56,1.12,1.12,0,0,1,1.57,0l9.07,9.07a1.1,1.1,0,0,1,0,1.57l-8.86,8.86A1.1,1.1,0,0,1,15.79,20.58Z\" />\n              </svg>\n              <span className=\"font-semibold text-xl tracking-tight\">\n                Open Climate Fix\n              </span>\n            </div>\n          </Link>\n          <div className=\"block lg:hidden\">\n            <button\n              type=\"button\"\n              onClick={() => this.toggleMenu()}\n              className=\"flex items-center px-3 py-2 border rounded text-white border-white hover:text-white hover:border-white\"\n            >\n              <svg\n                className=\"fill-current h-3 w-3\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <title>Menu</title>\n                <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n              </svg>\n            </button>\n          </div>\n          <div\n            className={`w-full block flex-grow lg:flex lg:items-center lg:w-auto ${menuClosed\n              && 'hidden'}`}\n          >\n            <div className=\"text-sm lg:flex-grow\">\n              <Link\n                to=\"/#about\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4\"\n              >\n                About\n              </Link>\n              <Link\n                to=\"/projects\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4\"\n              >\n                Projects\n              </Link>\n              <Link\n                to=\"/blog\"\n                className=\"block mt-4 lg:inline-block lg:mt-0 text-white hover:text-white mr-4\"\n              >\n                Blog\n              </Link>\n            </div>\n            <div>\n              <Link\n                to=\"/#get-involved\"\n                className=\"inline-block text-sm px-4 py-2 leading-none border rounded text-white border-white hover:border-transparent hover:text-black hover:bg-white mt-4 lg:mt-0\"\n              >\n                Get Involved\n              </Link>\n            </div>\n          </div>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Footer from './Footer';\n\nexport default Footer;\n","import React from 'react';\n\nimport { MdEmail } from 'react-icons/md';\nimport {\n  FaTwitter,\n  FaDonate,\n  FaMedium,\n  FaDiscourse,\n  FaYoutube,\n} from 'react-icons/fa';\nimport { GoMarkGithub } from 'react-icons/go';\n\nimport footerStyles from './footer.module.css';\n\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-black p-6 text-white text-center\">\n      <div className={footerStyles.iconList}>\n        <a\n          href=\"https://github.com/openclimatefix\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <GoMarkGithub />\n        </a>\n        <a\n          href=\"https://twitter.com/openclimatefix\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaTwitter />\n        </a>\n        <a\n          href=\"mailto:info@openclimatefix.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <MdEmail />\n        </a>\n        <a\n          href=\"https://medium.com/open-climate-fix\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaMedium />\n        </a>\n        <a\n          href=\"https://openclimatefix.discourse.group/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaDiscourse />\n        </a>\n        <a\n          href=\"https://www.youtube.com/channel/UCq2-AN_j8BMERxTqdSvtPAg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaYoutube />\n        </a>\n        <a\n          href=\"https://opencollective.com/openclimatefix\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <FaDonate />\n        </a>\n      </div>\n      <p className=\"mt-4\">\n        Open Climate Fix Ltd.\n      </p>\n    </footer>\n  );\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport SEO from './seo';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport './layout.css';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <>\n      <SEO title={siteTitle} />\n      <Header />\n      <main className=\"px-6 container mx-auto md:max-w-2xl lg:max-w-2xl xl:max-w-2xl mb-16\">{children}</main>\n      <Footer />\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\n\nconst PostLink = ({ post }) => (\n  <li>\n    <span>\n      {post.frontmatter.date}\n&ensp;\n    </span>\n    <Link to={post.frontmatter.path}>{post.frontmatter.title}</Link>\n  </li>\n);\n\nPostLink.propTypes = {\n  post: PropTypes.shape({\n    frontmatter: PropTypes.shape({\n      date: PropTypes.string.isRequired,\n      path: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default PostLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PostLink from './PostLink';\n\n\nconst PostList = ({ posts }) => (\n  <div className=\"markdown mt-6\">\n    <ul>\n      {posts.map(({ node: post }) => <PostLink key={post.id} post={post} />)}\n    </ul>\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    node: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired).isRequired,\n};\n\nexport default PostList;\n"],"sourceRoot":""}